name: Build and Deploy Docker Image

on:
  repository_dispatch:
    types: [release-trigger]

jobs:
  build-scan-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -y && sudo apt-get install -y jq
        curl -sSL https://install.mondoo.com/sh | sudo bash
        cnspec version
      
    - name: Checkout Phase 2 repository
      uses: actions/checkout@v4
    
    - name: Debug Repository Dispatch Event
      run: |
        echo "Received event type: ${{ github.event.action }}"
        echo "Received tag: ${{ github.event.client_payload.tag }}"

    - name: Download and Verify Release Asset
      run: |
        RELEASE_TAG=${{ github.event.client_payload.tag }}
        if [ -z "$RELEASE_TAG" ]; then 
          echo "Error: Release tag not found!"; exit 1; 
        fi

        echo "Downloading artifact for release tag: $RELEASE_TAG"
        ASSET_ID=$(curl -H "Authorization: token ${{ secrets.MY_PAT }}" \
             -H "Accept: application/vnd.github.v3+json" \
             https://api.github.com/repos/saranjsr/test-go/releases/tags/$RELEASE_TAG | jq -r '.assets[] | select(.name=="my-app-linux") | .id')
    
        curl -L -o my-app-linux \
             -H "Authorization: token ${{ secrets.MY_PAT }}" \
             -H "Accept: application/octet-stream" \
             https://api.github.com/repos/saranjsr/test-go/releases/assets/$ASSET_ID

        file my-app-linux
        ls -lh my-app-linux

    - name: Build Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        tags: saranjsr07/my-app:latest
        push: false
        
    - name: Debug cnspec Providers
      run: |
        cnspec providers list


    - name: Create cnspec Policy
      run: |
        echo 'dockerfile.file("/root/my-app-linux").exists should be true' > container-policy.mql
        echo 'dockerfile.expose should contain 8080' >> container-policy.mql
        cat container-policy.mql
    
    - name: Run cnspec Tests on Docker Image
      run: |
        cnspec scan docker file . --policy-bundle policy.mql.yaml --incognito || exit 1


    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: saranjsr07/my-app:${{ github.event.client_payload.tag }}
